on:
  # schedule:
    # - cron: '0 * * * 1'
  pull_request:
    branches: [ "test" ]
  workflow_dispatch:

name: PR Verification
jobs:
  sonarQube:
    name: SonarQube Scan
    runs-on: linux
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build with Maven
      run: |
        cd initial
        mvn clean test jacoco:report
        ls -R
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Add coverage to PR
      id: jacoco
      uses: madrapps/jacoco-report@v1.3
      with:
        paths: ${{ github.workspace }}/initial/target/site/jacoco/jacoco.xml
        token: ${{ secrets.GH_TOKEN }}
        min-coverage-overall: 0
        min-coverage-changed-files: -1

    - name: Get the Coverage info
      run: |
        echo "Total coverage ${{ steps.jacoco.outputs.coverage-overall }}"
        echo "Changed Files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}"

    # Check the Quality Gate status.
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time.
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST }} #OPTIONAL

      # Optionally you can use the output from the Quality Gate in another step.
      # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
    - name: "Example show SonarQube Quality Gate Status value"
      run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
    - name: Create comment
      uses: Hyeonykim/create-or-update-comment@main
      with:
        issue-number: 1
        body: |
          This is a multi-line test comment
          - With GitHub **Markdown** :sparkles:
          - Created by [create-or-update-comment][1]

          [1]: https://github.com/peter-evans/create-or-update-comment
        reactions: '+1'
